import Head from 'next/head'
import Image from 'next/image'
import axios from 'axios';
import { useEffect, useState } from 'react';
import { Flowbite } from 'flowbite-react';
import { useTheme, useThemeMode, usePreferences } from 'flowbite-react';

import styles from '../styles/Home.module.css';
import { LoadingSpinner } from '../components/Placeholders';
import ItemCard from '../components/ItemCard';
import Navbar from '../components/Navbar';
import EditorModal from '../components/EditorModal';
import useGlobalStore, { 
    setAccessToken, 
    setBreadArray, 
    setTargetBread, 
    toggleEditModal 
} from '../components/store';

const Home = () => {
    const [mode, setMode, toggleMode] = useThemeMode(usePreferences);
    // setMode();
    // global states
    const token = useGlobalStore(state => state.accessToken);
    const breadArray = useGlobalStore(state => state.breadArray);
    // const showEditModal = useGlobalStore(state => state.showEditModal);

    function loadLocalToken() {
        const token = localStorage.getItem('accessToken');
        return token;
    }


    const ax = axios.create({
        baseURL: 'https://betis23-oprec.herokuapp.com',
        headers: {
            'Authorization': `Bearer ${token}`
        }
    });

    const updateBreadData = (ax) => {
        fetch('https://betis23-oprec.herokuapp.com/roti/', {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`
            }
        })
        .then(response => response.json())
        .then(res => {
            setBreadArray(res.data);
        })
    }

    const handleEditButton = (targetId) => {
        const target = {};
        for (const bread of breadArray) {
            if (bread.id === targetId) {
                setTargetBread(bread);
            }
        }

        toggleEditModal();
    }

    // client-side effect, because server cannot access localStorage.
    useEffect(() => {
        if (token === "none") {
            setAccessToken(loadLocalToken())
        }

    }, []);

    useEffect(() => {
        if (token !== "none") {
            const data = updateBreadData(ax);
        }

    }, [token]);


    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App!</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            
            <Navbar />
            <main className={styles.main}>
                <h1 className={styles.title}>selamat datang di toko rotiku</h1>
                <EditorModal />
                <div>
                    <div className='grid grid-cols-3'>
                        {breadArray ? 
                            breadArray.length > 0 ? 
                                breadArray.map(item => <ItemCard bread={item} editHandler={handleEditButton} />) 
                            : <LoadingSpinner />
                        : <p className='col-span-3 place-items-center'>Login first!{window.location.replace("/login/")}</p>}
                    </div>
                </div>
            </main>

            <footer className='bg-gray-900'>
                Tugas Khusus Webdev BETIS 2023 - Givarrel Veivel Pattiwael
            </footer>
        </div>
  )
}

export default Home;
